---
# Copyright 2020 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Deploy the content provider registry
  block:
    - name: 'Deploy the content provider registry from {{ container_registry_image }}'
      become: true
      podman_container:
        name: docker_registry
        image: "{{ container_registry_image }}"
        publish:
          - "{{ content_provider_registry_port }}:{{ content_provider_registry_port }}"
        env:
          REGISTRY_HTTP_ADDR: "0.0.0.0:{{ content_provider_registry_port }}"
          REGISTRY_LOG_LEVEL: debug
      tags:
        - skip_ansible_lint
  rescue:
    - name: "Deploy the content provider registry from {{ container_registry_image_fallback }}"
      become: true
      podman_container:
        name: docker_registry
        image: "{{ container_registry_image_fallback }}"
        publish:
          - "{{ content_provider_registry_port }}:{{ content_provider_registry_port }}"
        env:
          REGISTRY_HTTP_ADDR: "0.0.0.0:{{ content_provider_registry_port }}"
          REGISTRY_LOG_LEVEL: debug
      tags:
        - skip_ansible_lint

- name: Open port for content provider registry
  become: true
  command: >-
    iptables -I INPUT -p tcp --dport {{ content_provider_registry_port }} -j ACCEPT
  changed_when: true

- name: Set container_image_build_volumes fact
  set_fact:
    container_image_build_volumes:
      - "/etc/yum.repos.d:/etc/distro.repos.d:z"
      - "/etc/pki/rpm-gpg:/etc/pki/rpm-gpg:z"

- name: Check if /opt/gating_repo exists
  stat:
    path: /opt/gating_repo
  register: gating_stat

- name: Add gating repo to mount volumes if exists
  set_fact:
    container_image_build_volumes:
      '{{ container_image_build_volumes + ["/opt/gating_repo:/opt/gating_repo:z"] }}'
  when: gating_stat.stat.exists|bool

- name: Build and push container images to the local registry
  collections:
    - tripleo.operator
  include_role:
    name: tripleo_container_image_build
  vars:
    tripleo_container_image_build_debug: true
    tripleo_container_image_build_generate_scripts: true
    tripleo_container_image_build_namespace: "{{ container_registry_namespace }}"
    tripleo_container_image_build_tag: "{{ container_tag }}"
    tripleo_container_image_build_push: true
    tripleo_container_image_build_registry: "{{ content_provider_registry_ip }}:{{ content_provider_registry_port }}"
    tripleo_container_image_build_rhel_modules: "{{ rhel_modules|default('') }}"
    tripleo_container_image_build_volumes: "{{ container_image_build_volumes }}"
    tripleo_container_image_build_work_dir: "{{ working_dir }}/container-builds"
    tripleo_container_image_build_prefix: "{{ docker_prep_prefix }}"
    tripleo_container_image_build_timeout: 10000
    tripleo_container_image_build_base: "{{ containers_base_image }}"

- name: Pull and push non *tripleo* container images to local registry
  import_tasks: non_tripleo_containers.yml
  when: job.provider_job|default(false)|bool
